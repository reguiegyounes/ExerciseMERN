[{"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\index.js":"1","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\App.js":"2","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-exercise.component.js":"3","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\exercises-List.component.js":"4","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\edit-exercise.component.js":"5","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-user.component.js":"6","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\Navbar.js":"7","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\MenuItems.js":"8"},{"size":209,"mtime":1610153065746,"results":"9","hashOfConfig":"10"},{"size":1037,"mtime":1610153065742,"results":"11","hashOfConfig":"10"},{"size":2896,"mtime":1610235803869,"results":"12","hashOfConfig":"10"},{"size":2422,"mtime":1610235773535,"results":"13","hashOfConfig":"10"},{"size":3848,"mtime":1610153065745,"results":"14","hashOfConfig":"10"},{"size":1844,"mtime":1610153065745,"results":"15","hashOfConfig":"10"},{"size":1198,"mtime":1610153065745,"results":"16","hashOfConfig":"10"},{"size":313,"mtime":1610153065744,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16a4kmo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\index.js",[],["39","40"],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\App.js",["41"],"import {createUseStyles} from 'react-jss';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport  Navbar from './components/Navbar/Navbar';\r\nimport  ExercisesList from \"./components/exercises-List.component\";\r\nimport  CreateExercises from \"./components/create-exercise.component\";\r\nimport  EditExercise  from \"./components/edit-exercise.component\";\r\nimport  CreateUser  from \"./components/create-user.component\";\r\nimport './App.css'\r\n\r\n\r\nconst useStyle=createUseStyles({\r\n  container:{\r\n    width:'1172px',\r\n    margin:'auto',\r\n    backgroundColor: '#fe5caa'\r\n  },\r\n \r\n});\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n \r\n  return (\r\n    <Router >\r\n      <div >\r\n        <Navbar />\r\n        <br/>\r\n        <Route path='/'   component={ExercisesList} exact/>\r\n        <Route path='/create' component={CreateExercises}/>\r\n        <Route path='/user' component={CreateUser}/>\r\n        <Route path='/edit/:id' component={EditExercise}/>\r\n      </div>\r\n     \r\n\r\n    </Router>\r\n  )}\r\n\r\nexport default App;\r\n","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-exercise.component.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\exercises-List.component.js",["42"],"import { Table, Space ,Button,Col} from 'antd';\r\nimport axios from 'axios';\r\nimport {useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n    \r\n \r\n\r\n\r\n\r\nfunction ExercisesList() {\r\n\r\n    const [exercises,setExercises]=useState([]);\r\n    const [loading,setLoading]=useState(true);\r\n    useEffect(() => {\r\n        axios.get(\"/exercises\")\r\n        .then(res=>{\r\n            setExercises(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch(err=>console.log('(viewExerciseList)(loadExercise)error : ',err));\r\n    }, []);\r\n\r\n    const deleteExercise=(id)=>{\r\n        axios.delete(\"/exercises/\"+id)\r\n        .then(res=>{console.log(res.data)})\r\n        .catch(err=>console.log('(viewExerciseList)(deleteExercise)error : ',err));\r\n\r\n        setExercises(exercises.filter(exercise=>exercise._id!==id));\r\n       \r\n    }\r\n    const columns = [\r\n        {\r\n          title: 'Username',\r\n          dataIndex: 'username',\r\n          key: 'username',\r\n        },\r\n        {\r\n          title: 'Description',\r\n          dataIndex: 'description',\r\n          key: 'description',\r\n        },\r\n        {\r\n          title: 'Duration',\r\n          dataIndex: 'duration',\r\n          key: 'duration',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: 'action',\r\n          render: (text, record) => (\r\n            <Space size=\"middle\">\r\n              <Link to={'/edit/'+record._id}>Edit</Link> | \r\n              <a onClick={()=>deleteExercise(record._id)}>Delete</a>\r\n            </Space>\r\n          )\r\n        }\r\n      ];\r\n\r\n    if(loading){\r\n        return (\r\n            <Col span={22} offset={1}>\r\n                <h1>Loading ...</h1>\r\n            </Col>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <Col span={22} offset={1}>\r\n                    <h1>Exercises list</h1>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{\r\n                            marginBottom: 16,\r\n                        }}\r\n                        >\r\n                        Add a row\r\n                    </Button>\r\n                    <Table columns={columns} dataSource={exercises} />\r\n                </Col>\r\n            </div>\r\n             \r\n        )\r\n    }\r\n       \r\n\r\n\r\n    }\r\nexport default ExercisesList;\r\n\r\n\r\n","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\edit-exercise.component.js",["43","44"],"import React,{ useState,useEffect,useRef} from 'react';\r\nimport moment from \"moment\";\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\n\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    DatePicker,\r\n    InputNumber,\r\n    Col\r\n  } from 'antd';\r\n\r\n  \r\n\r\nfunction EditExercises(props) {\r\n    \r\n    const [form] = Form.useForm();\r\n    const [users,setUsers]=useState([]);\r\n    const [redirect,setRrdirect]=useState(false);\r\n    const [updated,setUpdated]=useState(false);\r\n  \r\n\r\n  \r\n    const onFinish = (values) => {\r\n        const id=props.match.params.id;\r\n        axios.post('http://localhost:9000/exercises/update/'+id,values)\r\n        .then(res=>{\r\n            setUpdated(true);\r\n        })\r\n        \r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n  \r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n\r\n        axios.get(\"http://localhost:9000/users\")\r\n        .then(res=>{\r\n            if(res.data.length>0){\r\n                setUsers(res.data.map(user=>user.username));\r\n            }\r\n            else{\r\n                setRrdirect(true);\r\n            }\r\n        })\r\n        .catch(err => console.log('(Edit exercise)(getUsers)Error: ' + err));\r\n        \r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       \r\n        const id=props.match.params.id;\r\n        axios.get(`http://localhost:9000/exercises/${id}`)\r\n        .then(res=>{\r\n            form.setFieldsValue({\r\n                username: res.data.username,\r\n                description:res.data.description,\r\n                duration:res.data.duration,\r\n                date: moment(res.data.date)\r\n            });\r\n        })\r\n        .catch(err => console.log('(Edit exercise)(getExercise)Error: ' + err));\r\n    },[]);\r\n    \r\n    if (redirect) {\r\n        return <Redirect  to='/user'/>\r\n    }\r\n    if (updated) {\r\n        return <Redirect  to='/'/>\r\n    }\r\n        return(\r\n            <>\r\n               <Col span={22} offset={1}>\r\n                   <h1>Edit Exercise</h1>\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        labelCol={{\r\n                            span: 4,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 18,\r\n                        }}\r\n                        layout=\"horizontal\"\r\n                        \r\n                    >\r\n                        \r\n                        <Form.Item label=\"Username\" name=\"username\">\r\n                            <Select>\r\n                                {users.map(user=>{\r\n                                    return(\r\n                                        <Select.Option key={user} >{user}</Select.Option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </Form.Item >\r\n                        <Form.Item label=\"Description\" name=\"description\" > \r\n                            <Input.TextArea  />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Duration\" name=\"duration\">\r\n                            <InputNumber/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Date\" name=\"date\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ offset: 4 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n               </Col>\r\n                \r\n            </>\r\n        )\r\n    \r\n    \r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default EditExercises","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-user.component.js",["45"],"import { useState} from 'react';\r\nimport {Form,Input,Button,Col} from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreateUser() {\r\n    const onFinish = (values) => {\r\n        console.log('Success add user:', values);\r\n        axios.post('http://localhost:9000/users/add',values)\r\n        .then(res=>console.log(res.data))\r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n    \r\n    \r\n    return( \r\n\r\n        <>\r\n            <Col span={22} offset={1}>\r\n                <h1>Create User</h1>\r\n                <Form\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                    layout=\"horizontal\"\r\n                \r\n                    size='default'\r\n                >\r\n                    <Form.Item label=\"Username\" \r\n                                name=\"username\" \r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your username!',\r\n                                    },\r\n                                ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                \r\n                    <Form.Item wrapperCol={{ offset: 4 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Add User\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n            \r\n        </>\r\n            \r\n    )\r\n\r\n\r\n}\r\nexport default CreateUser;","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\MenuItems.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":13,"column":7,"nodeType":"52","messageId":"53","endLine":13,"endColumn":15},{"ruleId":"54","severity":1,"message":"55","line":58,"column":15,"nodeType":"56","endLine":58,"endColumn":59},{"ruleId":"50","severity":1,"message":"57","line":1,"column":35,"nodeType":"52","messageId":"53","endLine":1,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":73,"column":7,"nodeType":"60","endLine":73,"endColumn":9,"suggestions":"61"},{"ruleId":"50","severity":1,"message":"62","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":18},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useStyle' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["65"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [form, props.match.params.id]",{"range":"68","text":"69"},[1776,1778],"[form, props.match.params.id]"]
[{"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\index.js":"1","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\App.js":"2","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-exercise.component.js":"3","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\exercises-List.component.js":"4","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\edit-exercise.component.js":"5","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-user.component.js":"6","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\Navbar.js":"7","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\MenuItems.js":"8"},{"size":209,"mtime":1610153065746,"results":"9","hashOfConfig":"10"},{"size":933,"mtime":1610383064897,"results":"11","hashOfConfig":"10"},{"size":4583,"mtime":1610392668273,"results":"12","hashOfConfig":"10"},{"size":2782,"mtime":1610387771642,"results":"13","hashOfConfig":"10"},{"size":4964,"mtime":1610386036808,"results":"14","hashOfConfig":"10"},{"size":2208,"mtime":1610391805114,"results":"15","hashOfConfig":"10"},{"size":1198,"mtime":1610153065745,"results":"16","hashOfConfig":"10"},{"size":313,"mtime":1610153065744,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16a4kmo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\index.js",[],["37","38"],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\App.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-exercise.component.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\exercises-List.component.js",["39","40"],"import { Table, Space ,Button,Col} from 'antd';\r\nimport axios from 'axios';\r\nimport {useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\n    \r\n \r\n\r\n\r\n\r\nfunction ExercisesList() {\r\n\r\n    const [exercises,setExercises]=useState([]);\r\n    const [loading,setLoading]=useState(true);\r\n    useEffect(() => {\r\n        axios.get(\"/exercises\")\r\n        .then(res=>{\r\n            const results= res.data.map(row => ({\r\n                key: row._id,\r\n                username: row.username,\r\n                description: row.description,\r\n                duration: row.duration,\r\n                date: row.date\r\n              }))\r\n              setExercises(results);\r\n              setLoading(false);\r\n        })\r\n        .catch(err=>console.log('(viewExerciseList)(loadExercise)error : ',err));\r\n\r\n        \r\n    }, []);\r\n\r\n    const deleteExercise=(id)=>{\r\n        axios.delete(\"/exercises/\"+id)\r\n        .then(res=>{\r\n            console.log(res.data)\r\n        })\r\n        .catch(err=>console.log('(viewExerciseList)(deleteExercise)error : ',err));\r\n        setExercises(exercises.filter(exercise=>exercise.key!==id));\r\n    }\r\n    const columns = [\r\n        {\r\n          title: 'Username',\r\n          dataIndex: 'username',\r\n          key: 'username',\r\n          fixed: 'left',\r\n        },\r\n        {\r\n          title: 'Description',\r\n          dataIndex: 'description',\r\n          key: 'description'\r\n        },\r\n        {\r\n          title: 'Duration',\r\n          dataIndex: 'duration',\r\n          key: 'duration'\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date'\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: 'action',\r\n          fixed: 'right',\r\n          \r\n          render: (text, record) => (\r\n            <Space size=\"middle\">\r\n              <Link \r\n                to={{\r\n                    pathname:'/edit/'+record.key,\r\n                    exercise:record\r\n                  }}\r\n                  //to={'/edit/'+record.key}\r\n                  >Edit\r\n              </Link> | \r\n              <a onClick={()=>deleteExercise(record.key)}>Delete</a>\r\n            </Space>\r\n          )\r\n        }\r\n      ];\r\n\r\n    if(loading){\r\n        return (\r\n            <Col span={22} offset={1}>\r\n                <h1>Loading ...</h1>\r\n            </Col>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <Col span={22} offset={1}>\r\n                    <h1>Exercises list</h1>\r\n                </Col>\r\n                <Col span={22} offset={1}>\r\n                    <Table columns={columns} dataSource={exercises} scroll={{ x: 500 }} />\r\n                </Col>\r\n            </div>\r\n             \r\n        )\r\n    }\r\n       \r\n\r\n\r\n    }\r\nexport default ExercisesList;\r\n\r\n\r\n","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\edit-exercise.component.js",["41"],"import React,{ useState,useEffect} from 'react';\r\nimport moment from \"moment\";\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\n\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    DatePicker,\r\n    InputNumber,\r\n    Col\r\n  } from 'antd';\r\n\r\n  \r\n\r\nfunction EditExercises(props) {\r\n    const id=props.match.params.id;\r\n    const [form] = Form.useForm();\r\n    const [users,setUsers]=useState([]);\r\n    const [redirect,setRrdirect]=useState(false);\r\n    const [updated,setUpdated]=useState(false);\r\n  \r\n\r\n  \r\n    const onFinish = (values) => {\r\n        \r\n        axios.post('/exercises/update/'+id,values)\r\n        .then(res=>{\r\n            setUpdated(true);\r\n        })\r\n        \r\n      };\r\n    \r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n  \r\n\r\n   \r\n    \r\n    useEffect(() => {\r\n        \r\n        axios.get(\"/users\")\r\n        .then(res=>{\r\n            if(res.data.length>0){\r\n                setUsers(res.data.map(user=>user.username));\r\n            }\r\n            else{\r\n                setRrdirect(true);\r\n            }\r\n        })\r\n        .catch(err => console.log('(Edit exercise)(getUsers)Error: ' + err));\r\n        \r\n        form.setFieldsValue({\r\n            username: props.location.exercise.username,\r\n            description:props.location.exercise.description,\r\n            duration:props.location.exercise.duration,\r\n            date: moment(props.location.exercise.date)\r\n        });\r\n\r\n\r\n       /* const id=props.match.params.id;\r\n        axios.get(`/exercises/${id}`)\r\n        .then(res=>{\r\n            \r\n        })\r\n        .catch(err => console.log('(Edit exercise)(getExercise)Error: ' + err));*/\r\n\r\n    },[]);\r\n\r\n   \r\n    \r\n    if (redirect) {\r\n        return <Redirect  to='/user'/>\r\n    }\r\n    if (updated) {\r\n        return <Redirect  to='/'/>\r\n    }\r\n        return(\r\n            <>\r\n               <Col span={22} offset={1}>\r\n                   <h1>Edit Exercise</h1>\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        labelCol={{\r\n                            span: 4,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 18,\r\n                        }}\r\n                        layout=\"horizontal\"\r\n                        \r\n                    >\r\n                        \r\n                        <Form.Item label=\"Username\" name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please select username !',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Select>\r\n                                {users.map(user=>{\r\n                                    return(\r\n                                        <Select.Option key={user} >{user}</Select.Option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </Form.Item >\r\n                        <Form.Item label=\"Description\" name=\"description\" \r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input description !',\r\n                                }\r\n                            ]}\r\n                        > \r\n                            <Input.TextArea  />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Duration\" name=\"duration\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input duration !',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <InputNumber/>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Date\" name=\"date\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input date !',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ offset: 4 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n               </Col>\r\n                \r\n            </>\r\n        )\r\n    \r\n    \r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default EditExercises","D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\create-user.component.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\Projects\\NodeJS project\\exercise_mern\\client\\src\\components\\Navbar\\MenuItems.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":24,"nodeType":"48","messageId":"49","endLine":1,"endColumn":30},{"ruleId":"50","severity":1,"message":"51","line":77,"column":15,"nodeType":"52","endLine":77,"endColumn":59},{"ruleId":"53","severity":1,"message":"54","line":72,"column":7,"nodeType":"55","endLine":72,"endColumn":9,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form', 'props.location.exercise.date', 'props.location.exercise.description', 'props.location.exercise.duration', and 'props.location.exercise.username'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [form, props.location.exercise.date, props.location.exercise.description, props.location.exercise.duration, props.location.exercise.username]",{"range":"62","text":"63"},[1717,1719],"[form, props.location.exercise.date, props.location.exercise.description, props.location.exercise.duration, props.location.exercise.username]"]